// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using recipe_sharing_backend.Data;

#nullable disable

namespace recipe_sharing_backend.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20230914062033_Intial Migration")]
    partial class IntialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("recipe_sharing_backend.Models.categories_table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.comments_table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("recipe_tableId")
                        .HasColumnType("integer");

                    b.Property<int>("user_tableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("recipe_tableId");

                    b.HasIndex("user_tableId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.rating_table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.Property<int>("recipe_tableId")
                        .HasColumnType("integer");

                    b.Property<int>("user_tableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("recipe_tableId");

                    b.HasIndex("user_tableId");

                    b.ToTable("rating");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.recipe_table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("categories_tableId")
                        .HasColumnType("integer");

                    b.Property<int>("user_tableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("categories_tableId");

                    b.HasIndex("user_tableId");

                    b.ToTable("recipe_Tables");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.user_table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.comments_table", b =>
                {
                    b.HasOne("recipe_sharing_backend.Models.recipe_table", "Recipe")
                        .WithMany()
                        .HasForeignKey("recipe_tableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("recipe_sharing_backend.Models.user_table", "User")
                        .WithMany()
                        .HasForeignKey("user_tableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.rating_table", b =>
                {
                    b.HasOne("recipe_sharing_backend.Models.recipe_table", "recipe_table")
                        .WithMany()
                        .HasForeignKey("recipe_tableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("recipe_sharing_backend.Models.user_table", "user")
                        .WithMany()
                        .HasForeignKey("user_tableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recipe_table");

                    b.Navigation("user");
                });

            modelBuilder.Entity("recipe_sharing_backend.Models.recipe_table", b =>
                {
                    b.HasOne("recipe_sharing_backend.Models.categories_table", "Category")
                        .WithMany()
                        .HasForeignKey("categories_tableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("recipe_sharing_backend.Models.user_table", "User")
                        .WithMany()
                        .HasForeignKey("user_tableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
